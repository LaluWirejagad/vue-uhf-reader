{"ast":null,"code":"export default {\n  name: 'HelloWorld',\n  props: {\n    msg: String\n  },\n  data() {\n    return {\n      responseData: ''\n    };\n  },\n  mounted() {\n    const intervalID = setInterval(async () => {\n      const response = await fetch('http://localhost:3000');\n      console.log('response: ', await response.json());\n      return () => {\n        clearInterval(intervalID);\n      };\n    }, 1000);\n  }\n};","map":{"version":3,"names":["name","props","msg","String","data","responseData","mounted","intervalID","setInterval","response","fetch","console","log","json","clearInterval"],"sources":["D:\\Atha\\Documents\\file IT\\projects\\vue-uhf-reader\\src\\components\\HelloWorld.vue"],"sourcesContent":["<template>\n  <div class=\"hello\">\n    <h1>{{ msg }}</h1>\n    <!-- <p>{{ responseData }}</p> -->\n  </div>\n</template>\n\n<script>\n\nexport default {\n  name: 'HelloWorld',\n  props: {\n    msg: String\n  },\n  data() {\n    return {\n      responseData: ''\n    }\n  },\n  mounted(){\n    const intervalID = setInterval(async () => {\n    const response = await fetch('http://localhost:3000');\n    console.log('response: ', await response.json());\n    return () => { \n      clearInterval(intervalID);\n    };\n  }, 1000);\n}\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n</style>\n"],"mappings":"AASA,eAAe;EACbA,IAAI,EAAE,YAAY;EAClBC,KAAK,EAAE;IACLC,GAAG,EAAEC;EACP,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,YAAY,EAAE;IAChB;EACF,CAAC;EACDC,OAAOA,CAAA,EAAE;IACP,MAAMC,UAAS,GAAIC,WAAW,CAAC,YAAY;MAC3C,MAAMC,QAAO,GAAI,MAAMC,KAAK,CAAC,uBAAuB,CAAC;MACrDC,OAAO,CAACC,GAAG,CAAC,YAAY,EAAE,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC,CAAC;MAChD,OAAO,MAAM;QACXC,aAAa,CAACP,UAAU,CAAC;MAC3B,CAAC;IACH,CAAC,EAAE,IAAI,CAAC;EACV;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}